[tox]
minversion = 3.15
envlist = default
isolated_build = True

[testenv]
# install pytest in the virtualenv where commands will be executed
deps = pytest
commands =
    # NOTE: you can run any command line tool here - not just tests
    pytest


[testenv:typecheck]
description = invoke mypy to typecheck the source code
skipsdist = true
skip_install = true
changedir = {toxinidir}
passenv =
    TERM
    # ^ ensure colors
deps =
    mypy
commands =
    python -m mypy --install-types --non-interactive {posargs:src}


[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
commands =
    clean: python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    build: python -m build {posargs:--wheel}

[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository testpypi} dist/*

[pytest]
testpaths = tests
addopts = --strict-markers --showlocals --verbose
